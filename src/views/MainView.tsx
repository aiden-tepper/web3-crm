import { useState, useCallback } from "react";
import ContactsTable from "./ContactsTable";
import ContactModal from "../components/ContactModal";
import DeleteModal from "../components/DeleteModal";
import { useDisclosure } from "@nextui-org/react";
import { useAppContext } from "../context/useAppContext";
import { useContacts } from "../hooks/useContacts";
import { Id } from "../../convex/_generated/dataModel";
import CustomNavbar from "../components/CustomNavbar";

const MainView = () => {
  const [modalMode, setModalMode] = useState("view");
  const { setSelectedContact, setEditableContact } = useAppContext();
  const { isOpen, onOpen, onClose } = useDisclosure();
  const { getContacts } = useContacts();
  const contacts = getContacts;
  const [isDeleteModalVisible, setIsDeleteModalVisible] = useState(false);
  const { deleteContact } = useContacts();
  const [contactToDelete, setContactToDelete] = useState<string | null>(null);

  const handleOpen = (key: string) => {
    if (key === "create") {
      setEditableContact({
        _id: "", // generated by backend
        name: "",
        email: "",
        phone: "",
        position: "",
        company: "",
        location: "",
        description: "",
        avatar: "",
        team: "",
        status: "",
      });
      setModalMode("create");
      onOpen();
    } else {
      const selected = contacts?.find((contact) => contact._id === key) ?? null;
      setSelectedContact(selected);
      onOpen();
    }
  };

  const handleClose = () => {
    setSelectedContact(null);
    setModalMode("view");
    onClose();
  };

  const confirmDelete = useCallback(() => {
    if (contactToDelete) {
      deleteContact({ id: contactToDelete as Id<"contacts"> })
        .then(() => {
          // You might want to refresh the contacts list here or show a success message
        })
        .finally(() => {
          setIsDeleteModalVisible(false);
          setContactToDelete(null);
        });
    }
  }, [contactToDelete, deleteContact]);

  const cancelDelete = useCallback(() => {
    setIsDeleteModalVisible(false);
    setContactToDelete(null);
  }, []);

  return (
    <>
      <div style={{ display: "flex", flexDirection: "column", width: "100vw" }}>
        <CustomNavbar />
        <ContactsTable
          key={contacts ? contacts.length : 0}
          contacts={contacts}
          handleOpen={handleOpen}
          setIsDeleteModalVisible={setIsDeleteModalVisible}
          setContactToDelete={setContactToDelete}
        ></ContactsTable>
        <ContactModal
          modalMode={modalMode}
          setModalMode={setModalMode}
          isOpen={isOpen}
          onClose={onClose}
          handleClose={handleClose}
        ></ContactModal>
        <DeleteModal
          isDeleteModalVisible={isDeleteModalVisible}
          cancelDelete={cancelDelete}
          confirmDelete={confirmDelete}
        ></DeleteModal>
      </div>
    </>
  );
};

export default MainView;
